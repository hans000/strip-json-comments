const e=Symbol("singleComment"),t=Symbol("multiComment"),i=()=>"",n=(e,t,i)=>e.slice(t,i).replace(/\S/g," "),o=(e,t)=>{let i=t-1,n=0;for(;"\\"===e[i];)i-=1,n+=1;return Boolean(n%2)};function l(l,s={}){const{whitespace:c=!0,trailingCommas:r=!1}=s;if("string"!=typeof l)throw new TypeError(`Expected argument \`jsonString\` to be a \`string\`, got \`${typeof l}\``);const f=c?n:i;let m=!1,a=!1,g=0,u="",p="",y=-1;for(let i=0;i<l.length;i++){const n=l[i],s=l[i+1];if(!a&&'"'===n){o(l,i)||(m=!m)}if(!m)if(a||n+s!=="//"){if(a===e&&n+s==="\r\n"){i++,a=!1,u+=f(l,g,i),g=i;continue}if(a===e&&"\n"===n)a=!1,u+=f(l,g,i),g=i;else{if(!a&&n+s==="/*"){u+=l.slice(g,i),g=i,a=t,i++;continue}if(a===t&&n+s==="*/"){i++,a=!1,u+=f(l,g,i+1),g=i+1;continue}r&&!a&&(-1!==y?"}"===n||"]"===n?(u+=l.slice(g,i),p+=f(u,0,1)+u.slice(1),u="",g=i,y=-1):" "!==n&&"\t"!==n&&"\r"!==n&&"\n"!==n&&(u+=l.slice(g,i),g=i,y=-1):","===n&&(p+=u+l.slice(g,i),u="",g=i,y=i))}}else u+=l.slice(g,i),g=i,a=e,i++}return p+u+(a?f(l.slice(g)):l.slice(g))}export{l as default};
